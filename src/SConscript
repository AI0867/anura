# vi: syntax=python:et:ts=4

Import("*")

makefile = file(File('#/Makefile.common').abspath)
target = None
sources_map = {}

contents = makefile.read()
objectlines = [line for line in contents.replace("\\\n","").split("\n") if "objects =" in line]
for line in objectlines:
    (target, rest) = line.split("objects =")
    target = target.rstrip("_")
    if len(target) == 0:
        target = "anura"
    elif target == "svg":
        target = "kresvg"
    print "target: ", target
    sources_map[target] = [x.replace("src/", "", 1) for x in [o for o in [object.strip().replace(".o", ".cpp") for object in rest.strip().split()] if o not in env["exclude"]]]

binaries = []

anura_sources = sources_map.pop("anura")

for key in sources_map:
    lib = env.Library(key, sources_map[key])
    anura_sources.append(lib)

anura = env.Program("#/anura" + build_suffix, anura_sources)
binaries = [env.Alias("anura", anura)]

all = env.Alias("all", binaries)
env.Default(all)
