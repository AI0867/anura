{
	//defines any kind of widget which can have focus.
	//handles negotiation of focus with other widgets.
	id: "focus_widget",
	is_strict: true,

	properties: {
		_focus_set_time: { type: "int", default: 0 },
		has_focus: { default: false, set: "if(value != _data, [set(_last_keys, null), set(_focus_set_time, level.cycle), set(_data, value), if(value, [set(c.has_focus, false) | c <- level.chars, c is obj focus_widget, c != me]), if(value, on_focus())])" },

		on_focus: "def() ->commands null",

		next_widget: { type: "null|obj focus_widget" },

		get_next_widget: "def() ->null|obj focus_widget
		if(next_widget != null and next_widget in level.chars, next_widget,
		find(ordered, value is obj focus_widget)
			where ordered = if(n = 0, level.chars, level.chars[n+1:] + level.chars[:n])
			where n = index(level.chars, me)
		)
		",

		_last_keys: { type: "null|list" },
		_keys_pressed: { type: "list", default: [] },

		_key_pressed: "def(string|int key) ->bool key in _keys_pressed",

		_on_enter: { type: "null|function()->commands" },
		_on_enter_arg: { type: "null|function(obj text_entry)->commands" },
		_on_tab: { type: "null|function()->commands" },

		_enter_pressed: "bool :: _key_pressed(13)",
		_tab_pressed: "bool :: _key_pressed(9)",

		_key_control: "bool :: ((level.player.ctrl_mod_key/64)%4 > 0)",
		_key_shift: "bool :: (level.player.ctrl_mod_key%4 > 0)",

		_key_backspace: "bool :: 8 in level.player.ctrl_keys",
		_key_delete: "bool :: 127 in level.player.ctrl_keys",

		_key_home: "bool :: 1073741898 in level.player.ctrl_keys",
		_key_end: "bool :: 1073741901 in level.player.ctrl_keys",
	},

	events: {
		process: "if(has_focus, [
			if(_last_keys = level.player.ctrl_keys,
			   set(_keys_pressed, []),
			[
				set(_keys_pressed, filter(level.player.ctrl_keys, _last_keys != null and value not in _last_keys)),
				set(_last_keys, level.player.ctrl_keys),
			]; [
				if(_enter_pressed and _on_enter, _on_enter()),
				if(_enter_pressed and _on_enter_arg, _on_enter_arg(me)),
				if(_tab_pressed and level.cycle > _focus_set_time+3,
					if(_on_tab,
					   _on_tab(),
					   if(next != null, set(next.has_focus, true))
					     where next = get_next_widget()
					)
				),

			]),
		])",
	},
}
