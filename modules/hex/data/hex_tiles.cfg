{
    "tiles": {
        "crater": {
            "editor_info": {
                "group": "desert", 
                "name": "Crater", 
				"type": "Dd^Dc",
            }, 
            "name": "Crater", 
            "image": "tiles/sand/desert-all.png", 
			sheet_pos: ["0"],
        }, 

        "desert": {
            "editor_info": {
                "group": "desert", 
                "name": "Desert Sands", 
				"type": "Dd",
            }, 
            "name": "Desert", 
            "image": "tiles/sand/desert-all.png", 
			height: 1.0,
			sheet_pos: ["0", "01", "21", "23", "24", "25", "26", "30"],
			adjacent: {
				"n": ["02"],
				"ne": ["03"],
				"se": ["13"],
				"s": ["51"],
				"sw": ["16"],
				"nw": ["10"],
			}
        }, 
        "dirt": {
            "editor_info": {
                "group": "flat", 
                "name": "Regular Dirt", 
				"type": "Re",
            }, 
            "name": "Dirt", 
            "image": "tiles/flat/dirt-all.png", 
			height: 0.0,
			sheet_pos: ["60"],
        }, 

       "grass_dry": {
            "editor_info": {
                "group": "flat", 
                "name": "Dry Grass", 
				"type": "Gd",
            }, 
            "name": "Grassland", 
            "image": "tiles/grass/dry-all.png", 
			sheet_pos: ["0"],
        }, 

        "road": {
            "editor_info": {
                "group": "flat", 
                "name": "Regular Cobbles", 
				"type": "Rr",
            }, 
            "name": "Road", 
            "image": "tiles/flat/road-all.png", 
			sheet_pos: ["0"],
        }, 
        "road_clean": {
            "editor_info": {
                "group": "flat", 
                "name": "Clean Gray Cobbles", 
				"type": "Rrc",
            }, 
            "name": "Road", 
            "image": "tiles/flat/road-clean-all.png", 
			sheet_pos: ["0"],
        }, 
        "sand": {
            "editor_info": {
                "group": "desert", 
                "name": "Beach Sands", 
				"type": "Ds",
            }, 
            "name": "Sand", 
            "image": "tiles/sand/beach-all.png", 
			sheet_pos: ["0"],
        }, 
        "savanna": {
            "editor_info": {
                "group": "flat", 
                "name": "Semi-dry Grass", 
				"type": "Gs",
            }, 
            "name": "Grassland", 
            "image": "tiles/grass/semi-dry-all.png", 
			sheet_pos: ["0"],
        }, 
        "stone_path": {
            "editor_info": {
                "group": "flat", 
                "name": "Overgrown Cobbles", 
				"type": "Rp",
            }, 
            "name": "Road", 
            "image": "tiles/flat/stone-path-all.png", 
			sheet_pos: ["0"],
        }, 

        "void": {
            "editor_info": {
                "group": "obstacle, special", 
                "name": "Void", 
				"type": "Xv",
            }, 
            "name": "Void", 
            "image": "tiles/void/void-all.png", 
			sheet_pos: ["0"],
        }, 
	},
	
    rules: [
		"base_tiles",
		"grass_transitions",
        "shore_line",
    ],
     
	functions: [
		"def match(hex, matches) hex.type in matches",
		"def dmatch(hex, syms, type ) fold(map(split(syms, '-'), hex[value].type = type), a and b)",
	
		"def transition_pattern(hex, type, matches, transition)
			1",
		
		"def rotndx(l,n) l[mod(n,size(l))]",
		
		"def rotdir(n) ['n','ne','se','s','sw','nw'][mod(n,6)]",
		
         "def beach_dark(hex, rots, terrain, adjacent)
            map(range(size(rots)), [
			
            /*if(hex[rotdir(value)] and hex[rotdir(value+1)], if(regex_match(hex.base_type, adjacent) and regex_match(hex[rotdir(value)].base_type, terrain) and regex_match(hex[rotdir(value+1)].base_type, terrain), 
                [add(hex.transitions, get_tile('shore_dark').transitions.concave[rots[value]+'-'+rots[mod(value-1,6)]]),
                add(hex.transitions, get_tile('shore_dark').transitions.concave[rots[value]+'-'+rots[mod(value+1,6)]])])),

            if(hex[rotdir(value)] and hex[rotdir(value+1)], if(regex_match(hex.base_type, terrain) and regex_match(hex[rotdir(value)].base_type, adjacent) and regex_match(hex[rotdir(value+1)].base_type, adjacent), 
                [add(hex.transitions, get_tile('shore_dark').transitions.convex[rots[value]+'-'+rots[mod(value-1,6)]]),
                add(hex.transitions, get_tile('shore_dark').transitions.convex[rots[value]+'-'+rots[mod(value+1,6)]])])),

            if(hex[rotdir(value)] and hex[rotdir(value+1)], if(regex_match(hex.base_type, terrain) and regex_match(hex[rotdir(value)].base_type, adjacent) and not regex_match(hex[rotdir(value+1)].base_type, adjacent+'|'+terrain), 
                add(hex.transitions, get_tile('shore_dark').transitions.convex[rots[value]+'-'+rots[mod(value-1,6)]]))),
                
            if(hex[rotdir(value)] and hex[rotdir(value+1)], if(regex_match(hex.base_type, terrain) and not regex_match(hex[rotdir(value)].base_type, adjacent+'|'+terrain) and regex_match(hex[rotdir(value+1)].base_type, adjacent), 
                add(hex.transitions, get_tile('shore_dark').transitions.convex[rots[value]+'-'+rots[mod(value+1,6)]]))),*/
            ])",
   ],
    handlers: {
		"base_tiles": "[
            if(hex.tile = null, set(hex.tile, get_tile(hex.base_type))),
            set(hex.shader, 
                {
                    'program': 'hex_shader', 
					'draw': '[
                        set(uniforms.u_color, color), 
                        set(uniforms.do_grayscale, vars.do_grayscale),
                        set(uniforms.do_highlight, vars.do_highlight),
                    ]',
					'create': '[set(uniforms.u_tex_map, 0)]',
					'vars': {
						'do_grayscale': 0,
                        'do_highlight': 0,
					},
                }
            ),
        ]",
		
        "grass_transitions": "[
			//debug(hex.type, hex.s.type, hex.tile.type, hex.tile.name, hex.tile.transitions.normal),
			
			transition_pattern(hex, 'savanna', ['grassland', 'grass_dry', 'leaf_litter', 'dirt_dark', 'road', 'stone_path', 'dirt'], 'long'),
			transition_pattern(hex, 'grassland', ['savanna', 'grass_dry', 'leaf_litter', 'dirt_dark', 'road', 'stone_path', 'dirt'], 'long'),
			transition_pattern(hex, 'grass_dry', ['grassland', 'savanna', 'leaf_litter', 'dirt_dark', 'road', 'stone_path', 'dirt'], 'long'),
			transition_pattern(hex, 'leaf_litter', ['grassland', 'savanna', 'grass_dry', 'dirt_dark', 'road', 'stone_path', 'dirt'], 'long'),
				
			transition_pattern(hex, 'leaf_litter', ['grassland', 'savanna', 'grass_dry'], 'long'),
			transition_pattern(hex, 'grass_dry', ['grassland', 'savanna', 'leaf_litter'], 'long'),
			transition_pattern(hex, 'grassland', ['grass_dry', 'savanna', 'leaf_litter'], 'long'),
			transition_pattern(hex, 'savanna', ['grassland', 'grass_dry', 'leaf_litter'], 'long'),
			
			transition_pattern(hex, 'savanna', ['dirt_dark', 'dirt', 'desert_road', 'road', 'desert', 'sand', 'snow'], 'medium'),
			transition_pattern(hex, 'grassland', ['dirt_dark', 'dirt', 'desert_road', 'road', 'desert', 'sand', 'snow'], 'medium'),
			transition_pattern(hex, 'grass_dry', ['dirt_dark', 'dirt', 'desert_road', 'road', 'desert', 'sand', 'snow'], 'medium'),
		]",
        
        "shore_line": "[
			beach_dark(hex, ['tr','r','br','bl','l','tl'], 'Gg', 'W.*'),
       ]",
  }
}
