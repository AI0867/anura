{
	id: "game_icon",
	is_strict: true,
	always_active: true,

	properties: {
		size: { default: 512.0, set: "[invalidate(), set(_data, value)]" },
		scaling: { type: "decimal", get: "size/512.0", set: "[invalidate(), set(size, 512*value)]", variable: false },
		rotation: { type: "decimal", set: "[invalidate(), set(_data, value)]", default: 0.0 },
		icon: { type: "string", set: "[
			if(_data != value, invalidate()),
			set(_data, value),
		]" },

		draw_color: { type: "[decimal,decimal,decimal,decimal]|[decimal,decimal,decimal]", default: [1.0,1.0,1.0,1.0] },

		additional_icons: { type: "[string]", default: [] },
		additional_colors: { type: "[[decimal,decimal,decimal,decimal]|[decimal,decimal,decimal]]", default: [] },

		draw_circle: {
			type: "bool",
			default: false,
			set: "if(_data != value, [invalidate(), set(_data, value)])",
		},

		circle_radius: { default: 0.48 },

		invalidate: "def() ->commands set(me._dirty, true)",

		_dirty: false,

		user_info: { type: "any" },

		force_no_alpha: { type: "bool", default: false },

		_update_canvas: "def() ->commands

		if (scaling > 0,
		[
		set(animation, {
			id: 'svg',
			image: 'svg',
			fbo: _render_internal(),
			x: 0,
			y: 0,
			w: int(scaling*512),
			h: int(scaling*512),
			scale: 1.0,
			frames: 1,
			force_no_alpha: force_no_alpha,
			duration: -1,
		}),
		set(me._dirty, false)
		])",

		render_to_file: "def(string fname='icon.png') ->commands
		  _render_internal().save(fname)",

		_render_internal: "def() ->texture_object
		query_cache(global_cache(16), [scaling, draw_circle, icon, rotation, additional_icons, draw_color, additional_colors],
		c.render(int(scaling*512), int(scaling*512),
			[
				c.save(),
			] +
			
			if(rotation = 0, [], [ c.translate(scaling*512/2.0, scaling*512/2.0), c.rotate(rotation), c.translate(-scaling*512/2.0, -scaling*512/2.0)]) +

			if(draw_circle, [
				c.translate(128*scaling, 128*scaling),
				c.scale(scaling/2, scaling/2)
			], [
				c.scale(scaling,scaling),
			]) +

			[
				c.set_source_color(draw_color),
				map(additional_icons, [
					c.save(),
					if(index < size(additional_colors), c.set_source_color(additional_colors[index])),
					c.draw_svg('images/icons/' + value, 512, 512),
					c.restore(),
				]),
				c.draw_svg('images/icons/' + icon, 512, 512),
				c.restore(),
			] + if(draw_circle, [
				c.arc(scaling*512/2, scaling*512/2, scaling*512*circle_radius, 0, 2*3.15),
				c.set_line_width(1.5),
				c.set_source_rgba(1, 1, 1, 1),
				c.stroke(),
			],
			[])) where c = canvas()
			asserting scaling < 20 | [scaling, icon]
		)
		",

		click_handler: { type: "null|function(obj game_icon)->commands" },
		mouse_enter_handler: { type: "null|function(obj game_icon)->commands" },
		mouse_leave_handler: { type: "null|function(obj game_icon)->commands" },
	},

	on_click: "if(click_handler, click_handler(me))",
	on_mouse_enter: "if(mouse_enter_handler, mouse_enter_handler(me))",
	on_mouse_leave: "if(mouse_leave_handler, mouse_leave_handler(me))",

	on_process: "if(_dirty, _update_canvas())",
}
